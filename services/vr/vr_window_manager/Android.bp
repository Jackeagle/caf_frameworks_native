// Copyright (C) 2016 The Android Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

native_src = [
    "application.cpp",
    "controller_mesh.cpp",
    "elbow_model.cpp",
    "hwc_callback.cpp",
    "reticle.cpp",
    "shell_view.cpp",
    "surface_flinger_view.cpp",
    "texture.cpp",
    "vr_window_manager.cpp",
    "vr_window_manager_binder.cpp",
    "aidl/android/service/vr/IVrWindowManager.aidl",
    "display_view.cpp",
]

static_libs = [
    "libdisplay",
    "libbufferhub",
    "libbufferhubqueue",
    "libeds",
    "libdvrgraphics",
    "libdvrcommon",
    "libhwcomposer-client",
    "libvrsensor",
    "libperformance",
    "libpdx_default_transport",
    "libcutils",
    "libvr_hwc-binder",
    "libvr_manager",
    "libvirtualtouchpadclient",
]

shared_libs = [
    "android.frameworks.vr.composer@1.0",
    "android.hardware.graphics.composer@2.1",
    "libbase",
    "libbinder",
    "libinput",
    "libhardware",
    "libhwbinder",
    "libsync",
    "libutils",
    "libgui",
    "libEGL",
    "libGLESv2",
    "libvulkan",
    "libsync",
    "libui",
    "libhidlbase",
    "libhidltransport",
    "liblog",
    "libvr_hwc-hal",
]

cc_binary {
    srcs: native_src,
    static_libs: static_libs,
    shared_libs: shared_libs,
    cflags: ["-DGL_GLEXT_PROTOTYPES", "-DEGL_EGLEXT_PROTOTYPES", "-DLOG_TAG=\"VrWindowManager\""],
    host_ldlibs: ["-llog"],
    name: "vr_wm",
    tags: ["optional"],
    init_rc: ["vr_wm.rc"],
}

cmd_src = [
    "vr_wm_ctl.cpp",
    "aidl/android/service/vr/IVrWindowManager.aidl",
]

staticLibs = ["libcutils"]

sharedLibs = [
    "libbase",
    "libbinder",
    "libutils",
]

cc_binary {
    srcs: cmd_src,
    static_libs: staticLibs,
    shared_libs: sharedLibs,
    cppflags: ["-std=c++11"],
    cflags: ["-DLOG_TAG=\"vrwmctl\""],
    host_ldlibs: ["-llog"],
    name: "vr_wm_ctl",
    tags: ["optional"],
}
